#pragma once

#include "ast/braced-statement.hpp"
#include "ast/class-declaration-repeated.hpp"
#include "ast/class-declaration.hpp"
#include "ast/comma-expression-repeated.hpp"
#include "ast/comma-expression.hpp"
#include "ast/comma-type-identifier-repeated.hpp"
#include "ast/comma-type-identifier.hpp"
#include "ast/expression-at-expression.hpp"
#include "ast/expression-bang.hpp"
#include "ast/expression-binary-operator-expression.hpp"
#include "ast/expression-comma-expression-repeated-optional.hpp"
#include "ast/expression-comma-expression-repeated.hpp"
#include "ast/expression-false.hpp"
#include "ast/expression-identifier-expression-comma-expression-repeated-optional.hpp"
#include "ast/expression-length.hpp"
#include "ast/expression-new-expression.hpp"
#include "ast/expression-new-identifier.hpp"
#include "ast/expression-parentheses.hpp"
#include "ast/expression-this.hpp"
#include "ast/expression-true.hpp"
#include "ast/expression.hpp"
#include "ast/extends-identifier-optional.hpp"
#include "ast/goal.hpp"
#include "ast/identifier.hpp"
#include "ast/main-class.hpp"
#include "ast/method-declaration-repeated.hpp"
#include "ast/method-declaration.hpp"
#include "ast/number.hpp"
#include "ast/statement-assignment-array.hpp"
#include "ast/statement-assignment.hpp"
#include "ast/statement-if-else.hpp"
#include "ast/statement-print.hpp"
#include "ast/statement-repeated.hpp"
#include "ast/statement-while.hpp"
#include "ast/statement.hpp"
#include "ast/type-boolean.hpp"
#include "ast/type-identifier-comma-type-identifier-repeated-optional.hpp"
#include "ast/type-identifier-comma-type-identifier-repeated.hpp"
#include "ast/type-identifier.hpp"
#include "ast/type-int-array.hpp"
#include "ast/type-int.hpp"
#include "ast/type.hpp"
#include "ast/var-declaration-repeated.hpp"
#include "ast/var-declaration.hpp"
